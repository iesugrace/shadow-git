#!/usr/bin/env python3
# Author: Joshua Chen
# Date: 2015-12-23
# Location: Shenzhen
# Desc: fetch the shadowed data from the Git server,
# and decrypt it to a local plain-text branch.

import os, sys
prog_path = os.path.realpath(__file__)
prog_dir  = os.path.dirname(prog_path)
sys.path.insert(0, prog_dir)
import lib

class Fetcher():
    """ Fetch the cipher branch from the remote, merge it into the local
    cipher branch, decrypt it, create a new temporary plain branch for it
    """
    def __init__(self, remote, branch):
        self.remote       = remote
        self.branch       = branch
        self.rmt_c_branch = 'cipher-%s' % branch
        self.rt_c_branch  = 'refs/remotes/' + self.remote + '/' + self.rmt_c_branch
        self.lc_c_branch  = 'cipher-%s-%s' % (remote, branch)
        self.plain_branch = 'plain-%s-%s' % (remote, branch)
        self.fetch()

    def fetch(self):
        """ Fetch the cipher branch from the remote, decrypt it,
        create a new temporary plain branch points to it.
        """
        stat = lib.fetch(self.remote, self.rmt_c_branch, self.rt_c_branch)
        if not stat:
            print('Fetch failed', file=sys.stderr)
            return False
        if (not lib.branch_exists(self.lc_c_branch) or
            lib.revision_parse(self.lc_c_branch) != lib.revision_parse(self.rt_c_branch)):
            lib.update_branch(self.lc_c_branch, self.rt_c_branch)
            tip = lib.decrypt_commit(self.lc_c_branch)
            lib.update_branch(self.plain_branch, tip)
        else:
            print('No change on the remote, nothing to do.')


def help(ofile=sys.stdout):
    """ Show help message
    """
    msg = 'Usage: %s remote branch' % os.path.basename(sys.argv[0])
    print(msg, file=ofile)


if __name__ == '__main__':
    if not lib.env_ok():
        exit(1)

    if len(sys.argv) < 3:
        help(sys.stderr)
        exit(1)

    remote, branch = sys.argv[1:3]
    try:
        Fetcher(remote, branch)
    except KeyboardInterrupt:
        exit(1)
    except Exception as e:
        print(str(e))
        exit(1)
    else:
        exit(0)
